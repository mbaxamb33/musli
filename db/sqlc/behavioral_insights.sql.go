// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: behavioral_insights.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createBehavioralInsights = `-- name: CreateBehavioralInsights :one

INSERT INTO behavioral_insights (
    brief_id, decision_making_style, risk_aversion_level, change_adoption_patterns, innovation_appetite,
    consensus_building_approach, conflict_resolution_style, communication_patterns, trust_building_factors,
    credibility_requirements, relationship_preferences, meeting_effectiveness, follow_up_responsiveness,
    documentation_preferences, presentation_style_preferences, negotiation_approach
)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16)
RETURNING id, brief_id, decision_making_style, risk_aversion_level, change_adoption_patterns, innovation_appetite,
    consensus_building_approach, conflict_resolution_style, communication_patterns, trust_building_factors,
    credibility_requirements, relationship_preferences, meeting_effectiveness, follow_up_responsiveness,
    documentation_preferences, presentation_style_preferences, negotiation_approach, created_at, updated_at
`

type CreateBehavioralInsightsParams struct {
	BriefID                      uuid.NullUUID  `json:"brief_id"`
	DecisionMakingStyle          sql.NullString `json:"decision_making_style"`
	RiskAversionLevel            sql.NullInt32  `json:"risk_aversion_level"`
	ChangeAdoptionPatterns       sql.NullString `json:"change_adoption_patterns"`
	InnovationAppetite           sql.NullString `json:"innovation_appetite"`
	ConsensusBuildingApproach    sql.NullString `json:"consensus_building_approach"`
	ConflictResolutionStyle      sql.NullString `json:"conflict_resolution_style"`
	CommunicationPatterns        sql.NullString `json:"communication_patterns"`
	TrustBuildingFactors         sql.NullString `json:"trust_building_factors"`
	CredibilityRequirements      sql.NullString `json:"credibility_requirements"`
	RelationshipPreferences      sql.NullString `json:"relationship_preferences"`
	MeetingEffectiveness         sql.NullString `json:"meeting_effectiveness"`
	FollowUpResponsiveness       sql.NullString `json:"follow_up_responsiveness"`
	DocumentationPreferences     sql.NullString `json:"documentation_preferences"`
	PresentationStylePreferences sql.NullString `json:"presentation_style_preferences"`
	NegotiationApproach          sql.NullString `json:"negotiation_approach"`
}

// =============================================================================
// BEHAVIORAL & PSYCHOLOGICAL INSIGHTS QUERIES
// =============================================================================
func (q *Queries) CreateBehavioralInsights(ctx context.Context, arg CreateBehavioralInsightsParams) (BehavioralInsight, error) {
	row := q.db.QueryRowContext(ctx, createBehavioralInsights,
		arg.BriefID,
		arg.DecisionMakingStyle,
		arg.RiskAversionLevel,
		arg.ChangeAdoptionPatterns,
		arg.InnovationAppetite,
		arg.ConsensusBuildingApproach,
		arg.ConflictResolutionStyle,
		arg.CommunicationPatterns,
		arg.TrustBuildingFactors,
		arg.CredibilityRequirements,
		arg.RelationshipPreferences,
		arg.MeetingEffectiveness,
		arg.FollowUpResponsiveness,
		arg.DocumentationPreferences,
		arg.PresentationStylePreferences,
		arg.NegotiationApproach,
	)
	var i BehavioralInsight
	err := row.Scan(
		&i.ID,
		&i.BriefID,
		&i.DecisionMakingStyle,
		&i.RiskAversionLevel,
		&i.ChangeAdoptionPatterns,
		&i.InnovationAppetite,
		&i.ConsensusBuildingApproach,
		&i.ConflictResolutionStyle,
		&i.CommunicationPatterns,
		&i.TrustBuildingFactors,
		&i.CredibilityRequirements,
		&i.RelationshipPreferences,
		&i.MeetingEffectiveness,
		&i.FollowUpResponsiveness,
		&i.DocumentationPreferences,
		&i.PresentationStylePreferences,
		&i.NegotiationApproach,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteBehavioralInsights = `-- name: DeleteBehavioralInsights :exec
DELETE FROM behavioral_insights
WHERE brief_id = $1
`

func (q *Queries) DeleteBehavioralInsights(ctx context.Context, briefID uuid.NullUUID) error {
	_, err := q.db.ExecContext(ctx, deleteBehavioralInsights, briefID)
	return err
}

const getBehavioralInsightsByBriefID = `-- name: GetBehavioralInsightsByBriefID :one
SELECT id, brief_id, decision_making_style, risk_aversion_level, change_adoption_patterns, innovation_appetite,
    consensus_building_approach, conflict_resolution_style, communication_patterns, trust_building_factors,
    credibility_requirements, relationship_preferences, meeting_effectiveness, follow_up_responsiveness,
    documentation_preferences, presentation_style_preferences, negotiation_approach, created_at, updated_at
FROM behavioral_insights
WHERE brief_id = $1
`

func (q *Queries) GetBehavioralInsightsByBriefID(ctx context.Context, briefID uuid.NullUUID) (BehavioralInsight, error) {
	row := q.db.QueryRowContext(ctx, getBehavioralInsightsByBriefID, briefID)
	var i BehavioralInsight
	err := row.Scan(
		&i.ID,
		&i.BriefID,
		&i.DecisionMakingStyle,
		&i.RiskAversionLevel,
		&i.ChangeAdoptionPatterns,
		&i.InnovationAppetite,
		&i.ConsensusBuildingApproach,
		&i.ConflictResolutionStyle,
		&i.CommunicationPatterns,
		&i.TrustBuildingFactors,
		&i.CredibilityRequirements,
		&i.RelationshipPreferences,
		&i.MeetingEffectiveness,
		&i.FollowUpResponsiveness,
		&i.DocumentationPreferences,
		&i.PresentationStylePreferences,
		&i.NegotiationApproach,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateBehavioralInsights = `-- name: UpdateBehavioralInsights :one
UPDATE behavioral_insights
SET decision_making_style = $2,
    risk_aversion_level = $3,
    change_adoption_patterns = $4,
    innovation_appetite = $5,
    consensus_building_approach = $6,
    conflict_resolution_style = $7,
    communication_patterns = $8,
    trust_building_factors = $9,
    credibility_requirements = $10,
    relationship_preferences = $11,
    meeting_effectiveness = $12,
    follow_up_responsiveness = $13,
    documentation_preferences = $14,
    presentation_style_preferences = $15,
    negotiation_approach = $16,
    updated_at = CURRENT_TIMESTAMP
WHERE brief_id = $1
RETURNING id, brief_id, decision_making_style, risk_aversion_level, change_adoption_patterns, innovation_appetite,
    consensus_building_approach, conflict_resolution_style, communication_patterns, trust_building_factors,
    credibility_requirements, relationship_preferences, meeting_effectiveness, follow_up_responsiveness,
    documentation_preferences, presentation_style_preferences, negotiation_approach, created_at, updated_at
`

type UpdateBehavioralInsightsParams struct {
	BriefID                      uuid.NullUUID  `json:"brief_id"`
	DecisionMakingStyle          sql.NullString `json:"decision_making_style"`
	RiskAversionLevel            sql.NullInt32  `json:"risk_aversion_level"`
	ChangeAdoptionPatterns       sql.NullString `json:"change_adoption_patterns"`
	InnovationAppetite           sql.NullString `json:"innovation_appetite"`
	ConsensusBuildingApproach    sql.NullString `json:"consensus_building_approach"`
	ConflictResolutionStyle      sql.NullString `json:"conflict_resolution_style"`
	CommunicationPatterns        sql.NullString `json:"communication_patterns"`
	TrustBuildingFactors         sql.NullString `json:"trust_building_factors"`
	CredibilityRequirements      sql.NullString `json:"credibility_requirements"`
	RelationshipPreferences      sql.NullString `json:"relationship_preferences"`
	MeetingEffectiveness         sql.NullString `json:"meeting_effectiveness"`
	FollowUpResponsiveness       sql.NullString `json:"follow_up_responsiveness"`
	DocumentationPreferences     sql.NullString `json:"documentation_preferences"`
	PresentationStylePreferences sql.NullString `json:"presentation_style_preferences"`
	NegotiationApproach          sql.NullString `json:"negotiation_approach"`
}

func (q *Queries) UpdateBehavioralInsights(ctx context.Context, arg UpdateBehavioralInsightsParams) (BehavioralInsight, error) {
	row := q.db.QueryRowContext(ctx, updateBehavioralInsights,
		arg.BriefID,
		arg.DecisionMakingStyle,
		arg.RiskAversionLevel,
		arg.ChangeAdoptionPatterns,
		arg.InnovationAppetite,
		arg.ConsensusBuildingApproach,
		arg.ConflictResolutionStyle,
		arg.CommunicationPatterns,
		arg.TrustBuildingFactors,
		arg.CredibilityRequirements,
		arg.RelationshipPreferences,
		arg.MeetingEffectiveness,
		arg.FollowUpResponsiveness,
		arg.DocumentationPreferences,
		arg.PresentationStylePreferences,
		arg.NegotiationApproach,
	)
	var i BehavioralInsight
	err := row.Scan(
		&i.ID,
		&i.BriefID,
		&i.DecisionMakingStyle,
		&i.RiskAversionLevel,
		&i.ChangeAdoptionPatterns,
		&i.InnovationAppetite,
		&i.ConsensusBuildingApproach,
		&i.ConflictResolutionStyle,
		&i.CommunicationPatterns,
		&i.TrustBuildingFactors,
		&i.CredibilityRequirements,
		&i.RelationshipPreferences,
		&i.MeetingEffectiveness,
		&i.FollowUpResponsiveness,
		&i.DocumentationPreferences,
		&i.PresentationStylePreferences,
		&i.NegotiationApproach,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
